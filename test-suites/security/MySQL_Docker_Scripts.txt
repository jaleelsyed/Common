/*
Creation Date: 22 Jun 2018
Created by: Riyaz Shaik
Company: fxlabs.io
Requirements: This was tested on Docker 

Command: docker version

Client:
 Version:      18.03.1-ce
 API version:  1.37
 Go version:   go1.9.5
 Git commit:   9ee9f40
 Built:        Thu Apr 26 07:17:20 2018
 OS/Arch:      linux/amd64
 Experimental: false
 Orchestrator: swarm

Server:
 Engine:
  Version:      18.03.1-ce
  API version:  1.37 (minimum version 1.12)
  Go version:   go1.9.5
  Git commit:   9ee9f40
  Built:        Thu Apr 26 07:15:30 2018
  OS/Arch:      linux/amd64
  Experimental: false
 
Description: 
S.No. 		History:			Version:
1			23 Jun 2018 		1.0

	This creates docker containers for the following 
		1. MySQL 8.0.11 Database
		(
			https://hub.docker.com/_/mysql/
			
		)
		2. phpMyAdmin
		(
			https://hub.docker.com/r/phpmyadmin/phpmyadmin/
		)

		3. MyWebSQL - This did not work. Need to debug and work 
		( 
			https://hub.docker.com/r/webhippie/mywebsql/
		) 

Reference URLs: 

https://severalnines.com/blog/mysql-docker-containers-understanding-basics
https://littletechblogger.wordpress.com/2016/02/26/docker-how-to-connect-to-a-mysql-running-container-using-mysql-command-line-client/

http://cse.unl.edu/~sscott/ShowFiles/SQL/CheatSheet/SQLCheatSheet.html

https://stackoverflow.com/questions/49948350/phpmyadmin-on-mysql-8-0


*/

Step 1: Install Docker

Step 2: Install MySQL 8.0.11
	2.1: Need to create workspace - create volume

			mkdir mysql8.0.11
			
			docker volume ls
			
			docker volume create --driver local --name=mysql8.0.11volume

			/* check status if the above volume is created */
			docker volume ls
			
	2.2: Environment Setup
			create file mysql8.0.11/mysql8.0.11-env.list
				touch mysql8.0.11/mysql8.0.11-env.list
				nano mysql8.0.11/mysql8.0.11-env.list
				
			Add the following. 

				MYSQL_ROOT_PASSWORD=rootSuperPassword
				MYSQL_DATABASE=mysqltestdb
				MYSQL_USER=testuser
				MYSQL_PASSWORD=testuserSuperPassword

			/* Verify file is created in the directory and the contents are as mentioned  */
			ls mysql8.0.11
			cat mysql8.0.11/mysql8.0.11-env.list

		
	2.3: Setting up Network
			docker network ls
			docker network create --driver bridge mysql8.0.11network
		/* check status if the above volume is created */
			docker network ls

	2.4 Run MySQL8.0.11

			/* single line docker run statement */
			docker run --publish 3306:3306 --volume=mysql8.0.11volume:/var/lib/mysql --env-file=mysql8.0.11/mysql8.0.11-env.list --name=mysql8.0.11 --hostname=mysql8.0.11 --network=mysql8.0.11network --detach mysql:8.0.11
			
			/* Check status of docker image running */
			docker ps -f name=mysql8.0.11

				
	2.5 Check the database contents by running bash and MySQL command client inside the container
		
		2.5.1: Get Container IP Address
		docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql8.0.11
		2.5.2: Run the MySql CLI inside container started
			/* Execute the below commands inside mysql8.0.11 container so that phpMyAdmin can connect */	

				docker exec -it mysql8.0.11 bash	
				mysql -h"172.19.0.2" -P"3306" -u"root" -p"rootSuperPassword" -e "ALTER USER root IDENTIFIED WITH mysql_native_password BY 'rootSuperPassword';"
				mysql -h"172.19.0.2" -P"3306" -u"root" -p"rootSuperPassword" -e "ALTER USER testuser IDENTIFIED WITH mysql_native_password BY 'testuserSuperPassword';"
				exit
				
Step 3: Install phpMyAdmin				

		3.1: Pull the Image 
			docker pull phpmyadmin/phpmyadmin
			/* Rename the image so that we can use simple name */
			docker image tag phpmyadmin/phpmyadmin phpmyadmin
	
		3.2: Create a work space - create volume 
	
			mkdir phpmyadmin
			
			docker volume ls
			docker volume create --driver local --name=phymyadminvolume

			/* check status if the above volume is created */
			docker volume ls
			
		3.3: Environment File Setup
			create file phpmyadmin/phpmyadmin-env.list
				touch phpmyadmin/phpmyadmin-env.list
				ls phpmyadmin
				nano phpmyadmin/phpmyadmin-env.list
				
			Add the following
			/*
			Here add the IP address of the mysql8.0.11 container that started earlier in step 2.5.1
			*/
			
				MYSQL_ROOT_PASSWORD=rootSuperPassword
				MYSQL_USER=testuser
				MYSQL_PASSWORD=testuserSuperPassword
				PMA_HOST=172.19.0.2

			/* Verify file is created in the directory and the contents are as mentioned  */
				ls phpmyadmin
				cat phpmyadmin/phpmyadmin-env.list

Step 3: Start the docker image. Publish port and name the container
	/* the below is used to link the mysql container that started earlier */
	docker run -p 8080:80 --link  mysql8.0.11:mysql_8_0_11 --env-file=phpmyadmin/phpmyadmin-env.list --network=mysql8.0.11network --name=phpmyadmin --hostname=phpmyadmin --detach phpmyadmin

	/* As --link is about to deprecated 
	the below is used to by not linking the mysql container that started earlier 
	*/
	docker run -p 8080:80 --env-file=phpmyadmin/phpmyadmin-env.list --network=mysql8.0.11network --name=phpmyadmin --hostname=phpmyadmin --detach phpmyadmin

Step 4: Stop the containers
	docker container stop mysql8.0.11 
	docker container stop phpmyadmin

Step 4:  Clean Up.
	Remove Docker Containers, Volumes, Network and Files and Directories.
		
		docker container stop phpmyadmin && docker container rm phpmyadmin
		docker container stop mysql8.0.11 && docker container rm mysql8.0.11
		docker network rm mysql8.0.11network
		docker volume rm mysql8.0.11volume && docker volume rm phymyadminvolume
		rm mysql8.0.11/mysql8.0.11-env.list
		rmdir mysql8.0.11
		rm phpmyadmin/phpmyadmin-env.list
		rmdir phpmyadmin
		docker image rm mysql:8.0.11
		docker image rm phpmyadmin
		docker image rm phpmyadmin/phpmyadmin:latest
		
		
/* 
I first tried to install MySqlWeb Web Client 
but The following is still not able to connect. 
So used phpMyAdmin instead. 
This will be looked and debugged later 
*/		

MySQLWeb Web Client Docker Image Details

Step 1: Pull the Image 
	docker pull webhippie/mywebsql

Step 2: 

	2.1: Need to create workspace - create volume

			mkdir webhippiemywebsql
			cd webhippiemywebsql
			pwd
			
			docker volume ls
			
			docker volume create --driver local --name=webhippiemywebsqlvolume

			/* check status if the above volume is created */
			docker volume ls
			
	2.2: Environment Setup
			create file webhippiemywebsql-env.list
				touch webhippiemywebsql-env.list
				nano webhippiemywebsql-env.list
				
			Add the following. 

MYWEBSQL_AUTH_TYPE=NONE
MYWEBSQL_AUTH_SERVER=mysql|mysql5
MYWEBSQL_AUTH_LOGIN=root
MYWEBSQL_AUTH_PASSWORD=rootSuperPassword
MYWEBSQL_BACKUP_FILENAME_FORMAT=<db>-<date><ext>
MYWEBSQL_BACKUP_DATE_FORMAT=Ymd-His
MYWEBSQL_TRACE_MESSAGES=false
MYWEBSQL_TRACE_FILEPATH
MYWEBSQL_LOG_MESSAGES=false
MYWEBSQL_MAX_RECORD_TO_DISPLAY=100
MYWEBSQL_MAX_TEXT_LENGTH_DISPLAY=80
MYWEBSQL_HOTKEYS_ENABLED=true
MYWEBSQL_DEFAULT_EDITOR=codemirror
MYWEBSQL_DEFAULT_THEME=default
MYWEBSQL_DEFAULT_LANGUAGE=en
MYWEBSQL_ALLOW_CUSTOM_SERVERS=true
MYWEBSQL_ALLOW_CUSTOM_SERVER_TYPES=mysql,pgsql
MYWEBSQL_SERVER_LIST=mysqli:localhost
						

			/* Verify file is created in the directory and the contents are as mentioned  */
			ls
			cat webhippiemywebsql-env.list

Step 3: Start the docker image. Publish port and name the container 
		docker run --publish 8080:8080 --env-file=webhippiemywebsql-env.list --name=webhippiemywebsql --hostname=webhippiemywebsql --network=mysql8.0.11network --detach webhippie/mywebsql
	
Step 4: To Remove docker containers
			
	docker container stop webhippiemywebsql && docker container rm webhippiemywebsql
	docker container stop mysql8.0.11 && docker container rm mysql8.0.11
	docker volume rm webhippiemywebsqlvolume
	rm webhippiemywebsql/webhippiemywebsql-env.list
	rmdir webhippiemywebsql
